version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:latest
    container_name: gourmet-db
    environment:
      POSTGRES_DB: gourmet_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gourmet-network

  # Restaurant Reservation Application
#  gourmet-app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: gourmet-app
#    depends_on:
#      postgres:
#        condition: service_healthy
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/gourmet_db
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: postgres
#    ports:
#      - "8080:8080"
#    networks:
#      - gourmet-network
#    restart: on-failure

networks:
  gourmet-network:
    driver: bridge

volumes:
  postgres-data: